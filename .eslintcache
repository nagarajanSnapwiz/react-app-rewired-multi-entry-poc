[{"/home/nagarajan/two-entry-app/src/reportWebVitals.js":"1","/home/nagarajan/two-entry-app/src/App.js":"2","/home/nagarajan/two-entry-app/src/index.js":"3","/home/nagarajan/two-entry-app/src/index2.js":"4","/home/nagarajan/two-entry-app/src/App2.js":"5","/home/nagarajan/two-entry-app/src/AntdKitchenSink.js":"6"},{"size":362,"mtime":1606313807192,"results":"7","hashOfConfig":"8"},{"size":990,"mtime":1606323596098,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1606318848144,"results":"10","hashOfConfig":"8"},{"size":501,"mtime":1606318898577,"results":"11","hashOfConfig":"8"},{"size":148,"mtime":1606323067606,"results":"12","hashOfConfig":"8"},{"size":3915,"mtime":1606320201125,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hw3a84",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/nagarajan/two-entry-app/src/reportWebVitals.js",[],["31","32"],"/home/nagarajan/two-entry-app/src/App.js",[],"/home/nagarajan/two-entry-app/src/index.js",[],["33","34"],"/home/nagarajan/two-entry-app/src/index2.js",[],["35","36"],"/home/nagarajan/two-entry-app/src/App2.js",[],["37","38"],"/home/nagarajan/two-entry-app/src/AntdKitchenSink.js",["39"],"import React from 'react';\nimport {\n    ConfigProvider,\n    Pagination,\n    DatePicker,\n    TimePicker,\n    Calendar,\n    Popconfirm,\n    Table,\n    Modal,\n    Button,\n    Select,\n    Transfer,\n    Radio,\n  } from 'antd';\n  import enUS from 'antd/lib/locale/en_US';\n  import zhCN from 'antd/lib/locale/zh_CN';\n  import moment from 'moment';\n  import 'moment/locale/zh-cn';\n  import 'antd/dist/antd.css';\n  moment.locale('en');\n  \n  const { Option } = Select;\n  const { RangePicker } = DatePicker;\n  \n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      filters: [\n        {\n          text: 'filter1',\n          value: 'filter1',\n        },\n      ],\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n    },\n  ];\n  \n  class Page extends React.Component {\n    state = {\n      visible: false,\n    };\n  \n    showModal = () => {\n      this.setState({ visible: true });\n    };\n  \n    hideModal = () => {\n      this.setState({ visible: false });\n    };\n  \n    render() {\n      const info = () => {\n        Modal.info({\n          title: 'some info',\n          content: 'some info',\n        });\n      };\n      const confirm = () => {\n        Modal.confirm({\n          title: 'some info',\n          content: 'some info',\n        });\n      };\n      return (\n        <div className=\"locale-components\">\n          <div className=\"example\">\n            <Pagination defaultCurrent={1} total={50} showSizeChanger />\n          </div>\n          <div className=\"example\">\n            <Select showSearch style={{ width: 200 }}>\n              <Option value=\"jack\">jack</Option>\n              <Option value=\"lucy\">lucy</Option>\n            </Select>\n            <DatePicker />\n            <TimePicker />\n            <RangePicker style={{ width: 200 }} />\n          </div>\n          <div className=\"example\">\n            <Button type=\"primary\" onClick={this.showModal}>\n              Show Modal\n            </Button>\n            <Button onClick={info}>Show info</Button>\n            <Button onClick={confirm}>Show confirm</Button>\n            <Popconfirm title=\"Question?\">\n              <a href=\"#\">Click to confirm</a>\n            </Popconfirm>\n          </div>\n          <div className=\"example\">\n            <Transfer dataSource={[]} showSearch targetKeys={[]} render={item => item.title} />\n          </div>\n          <div className=\"site-config-provider-calendar-wrapper\">\n            <Calendar fullscreen={false} value={moment()} />\n          </div>\n          <div className=\"example\">\n            <Table dataSource={[]} columns={columns} />\n          </div>\n          <Modal title=\"Locale Modal\" visible={this.state.visible} onCancel={this.hideModal}>\n            <p>Locale Modal</p>\n          </Modal>\n        </div>\n      );\n    }\n  }\n  \n  class App extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        locale: enUS,\n      };\n    }\n  \n    changeLocale = e => {\n      const localeValue = e.target.value;\n      this.setState({ locale: localeValue });\n      if (!localeValue) {\n        moment.locale('en');\n      } else {\n        moment.locale('zh-cn');\n      }\n    };\n  \n    render() {\n      const { locale } = this.state;\n      return (\n        <div>\n          <div className=\"change-locale\">\n            <span style={{ marginRight: 16 }}>Change locale of components: </span>\n            <Radio.Group value={locale} onChange={this.changeLocale}>\n              <Radio.Button key=\"en\" value={enUS}>\n                English\n              </Radio.Button>\n              <Radio.Button key=\"cn\" value={zhCN}>\n                中文\n              </Radio.Button>\n            </Radio.Group>\n          </div>\n          <ConfigProvider locale={locale}>\n            <Page\n              key={locale ? locale.locale : 'en' /* Have to refresh for production environment */}\n            />\n          </ConfigProvider>\n        </div>\n      );\n    }\n  }\n\n  \n  export default App;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"40","replacedBy":"46"},{"ruleId":"42","replacedBy":"47"},{"ruleId":"40","replacedBy":"48"},{"ruleId":"42","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":90,"column":15,"nodeType":"52","endLine":90,"endColumn":27},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],["53"],["54"],["53"],["54"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]